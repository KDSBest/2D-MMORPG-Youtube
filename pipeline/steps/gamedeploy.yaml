parameters:
- name: Subscription
  type: string
  default: $(Subscription)

- name: ClusterName
  type: string
  default: $(GameName)

- name: RGName
  type: string
  default: $(GameName)-rg

- name: RedisUrl
  type: string
  default: redis://redis-svc.mmorpg.svc.cluster.local:6379

- name: WorkingDir
  type: string
  default: $(System.DefaultWorkingDirectory)/charts/mmorpg

- name: Namespace
  type: string
  default: mmorpg

- name: ServicePrincipalId
  type: string
  default: $(ServicePrincipalACRId)

- name: ServicePrincipalPassword
  type: string
  default: $(ServicePrincipalACRSecret)

- name: Location
  type: string
  default: westeurope

steps:
- task: AzureCLI@2
  displayName: Get Cosmos Values
  inputs:
    azureSubscription: ${{ parameters.Subscription }}
    scriptType: 'pscore'
    scriptLocation: 'inlineScript'
    powerShellIgnoreLASTEXITCODE: true
    inlineScript: |
      $keys = az cosmosdb keys list --resource-group ${{ parameters.ClusterName }}-rg --name ${{ parameters.ClusterName }}cosmos | ConvertFrom-Json
      $cosmosKey = $keys.primaryMasterKey
      $cosmosUrl = "https://${{ parameters.ClusterName }}cosmos.documents.azure.com:443/"
      Write-Host "##vso[task.setvariable variable=CosmosKey;]$cosmosKey"
      Write-Host "##vso[task.setvariable variable=CosmosUrl;]$cosmosUrl"

- task: replacetokens@3
  displayName: Replace Tokens in Helm Yaml
  inputs:
    rootDirectory: ${{ parameters.WorkingDir }}
    targetFiles: '**/*.yaml'
    encoding: 'auto'
    writeBOM: true
    actionOnMissing: 'warn'
    keepToken: false
    tokenPrefix: '@@{'
    tokenSuffix: '}@@'
    useLegacyPattern: false
    enableTransforms: false
    enableTelemetry: true

- task: AzureCLI@2
  displayName: Create ACR Pull Secret
  inputs:
    azureSubscription: ${{ parameters.Subscription }}
    scriptType: 'pscore'
    scriptLocation: 'inlineScript'
    powerShellIgnoreLASTEXITCODE: true
    inlineScript: |
      Write-Host "Get KubeConfig"
      az aks get-credentials --name ${{ parameters.ClusterName }} --resource-group ${{ parameters.RGName }}

      Write-Host "Create Pull Secret Namespace"
      try {
        kubectl create namespace ${{ parameters.Namespace }}
      } catch {
      }

      Write-Host "Create Pull Secret"
      try {
        kubectl create secret docker-registry acr-secret --namespace ${{ parameters.Namespace }} --docker-server=${{ parameters.ClusterName }}acr.azurecr.io --docker-username=${{ parameters.ServicePrincipalId }} --docker-password=${{ parameters.ServicePrincipalPassword }}
      } catch {
      }

- task: AzureCLI@2
  displayName: Deploy Game Helm
  inputs:
    azureSubscription: ${{ parameters.Subscription }}
    scriptType: 'pscore'
    scriptLocation: 'inlineScript'
    inlineScript: |
      Write-Host "Get KubeConfig"
      az aks get-credentials --name ${{ parameters.ClusterName }} --resource-group ${{ parameters.RGName }}

      Write-Host "Add Helm Repo"
      cd ${{ parameters.WorkingDir }}

      Write-Host "Helm Package"
      helm package ./
      $file = (Get-ChildItem -File -Filter *.tgz)[0].FullName
      
      Write-Host "Try deploy $file"
      helm upgrade -i mmorpg $file --namespace ${{ parameters.Namespace }}

